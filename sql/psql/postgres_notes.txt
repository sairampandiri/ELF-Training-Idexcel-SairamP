						Notes for plsql

syntax to check which version is present in the system :

	select version();

syntax to create database:

	create database database name;

\d : It is to check  the relations(tables) present in the current database .

\d table_name : It will display the details of the table.

\! cls : It is used to clear the screen.


Syntax To create a database :

	create database database_name;

Syntax to change one database to another database:

	\c database_name

\l  : It will shows the list of the database present in the system.

DDL:It helps to define the structure of the table 

In DDL we can use :
1. create
2. alter
3. drop
4. rename
5. truncate

syntax for create command :

	create table table_name ( column1  datatype  constraints ,column2  datatype  constraints ,-----,column n  datatype  constraints);

syntax for alter command :

add column by using alter command:

	alter table table_name add column column_name datatype:

add column by using alter command:

	alter table table_name drop column column_name :

rename column name by using alter command:
	
	alter table table_name rename column old_column_name to new_column_name:
	
rename table name by using alter command:

	alter table old_table_name rename to new_table_name;

rename database name by using alter command:

	alter database old_database_name to new_database_name ;

syntax for drop command:

	drop database dbname;

DML:

syntax for insert  command:
	insert into table_name(column_name1,column_name2,column_name3 ,column_name4,.........,column_name n)
	values (value1,value2,value3,value4,.......,value n);

insert into table_name values (value1,value2,value3,value4,.......,value n);




DQL:
========
select command----> It helps to retrive the data from table.

3 different ways to retrive the data from the table:

1. projection   eg----->select *  from employee;
2. selection	     eg----->select ename from employee;
3. join

Syntax for select command:

select * /[Distinct name]column_name/expression[alias] from table_name;

eg----->select *  from employee;


eg----->select ename from employee;


update:
============
eg----->update employee  set salary=25000.00;

syntax:
========
eg----->update table_name set column_name=value;
eg----->update employee set sal=30000.00 where empid=8;

delete:
============
delete form employee;


syntax:
============
delete from table_name;
delete from employee where empid=9;

synatx for where clause:
=================
select column1,cloumn2/* from table_name where condition;
order of execution:
eg------>select  * from employee empid=3;

===============
1. From
2. Where
3. Select



